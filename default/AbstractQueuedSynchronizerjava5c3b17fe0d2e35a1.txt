{"version":"5c3b17fe0d2e35a1","fileName":"AbstractQueuedSynchronizer.java","fileSimpleName":"AbstractQueuedSynchronizer","fileType":"java","notes":{"645":"如果 state 小于 0，则 CAS 置为 0（初始状态）","654":"获取后继节点","655":"如果后继节点为空或者是 Cancel 状态","656":"直接把后继节点置为空","657":"从尾节点倒着往前寻找","658":"如果找到一个状态小于 0 的节点 （Signal）","659":"把当前节点赋给 s","918":"计算等待的最后时间点","662":"唤醒离头节点最近的不为空的节点","796":"获取 pred 节点（前一个结点）等待状态","797":"如果状态为 Signal 状态，可以安全 park，直接返回 true","930":"算出剩余的时间","803":"如果前节点状态大于 0（cancel 状态）","931":"如果剩余时间小于 0，代表已经超时了，直接返回 false 获取锁失败","933":"如果当前线程应该被挂起","934":"并且他的剩余时间大于 1000 纳秒，则让线程进入等待状态","809":"把 node 的前指向指向 pred 的前指向指向的节点，相当于移除了 pred 节点","1199":"锁的获取","1200":"完成加锁，线程状态变化的逻辑","1201":"将获取锁失败的线程放入同步队列里","818":"如果前节点的状态不为 cancel 状态，则 CAS 把前节点的状态置为等待状态 （Signal）","1223":"如果获取锁失败","584":"死循环","586":"如果 tai 为 null，说明还没有初始化","587":"初始化并 CAS 设置头节点，","588":"同时把头节点也设置为尾节点","590":"重复 addWaiter 方法里的添加尾节点的方法","1244":"带过期时间的获取锁方法","606":"以当前线程创建 Node 节点","862":"死循环","1246":"如果当前线程被中断，直接抛出异常","863":"拿到 node 的前一个节点","608":"把 tail 赋给 pred","864":"如果当前节点的 pre 节点为头节点，就尝试获取锁","609":"如果当前的 tail 节点不为空","865":"把 node 设置为头节点","1249":"要么直接获取锁成功，要么等待获取","610":"把新创建的 node 节点的上个节点指向 tail","866":"因为 node 已经成为了头节点，p 没有用了，把 p 的下个节点指向为空，帮助 JVM 回收","611":"CAS 把 node 节点设置为 tail","612":"把 pred 的后一个节点指向 node","868":"加锁成功","870":"如果 pre 节点不为头节点，判断 pre 节点为 Signal 状态，就不管，如果为 Cancel 状态，就移除 pre 节点，其他状态的节点会通过 CAS 替换为 Signal 状态","871":"挂起该线程并清除中断标志","615":"如果当前 tail 为空或者在进行 CAS 设置尾节点时失败，会走到 enq 方法","616":"死循环添加","744":"如果 node 为 null 直接返回","875":"如果出现异常，进入 finally 代码块","747":"把 node 的线程置为 null","876":"将当前线程移除队列，并将当前线程设置为 Cancel 状态","750":"获得 node 的上一个节点 pred","751":"如果 pred 节点处于 cancel 状态","752":"移除 pred 节点","1264":"如果解锁成功","1520":"获取尾节点","1265":"获取头节点","1521":"获取头节点","1266":"如果头节点不为空而且状态不为 初始化状态，则唤醒后继节点","1523":"h 和 t 相同有两种情况：1. 队列还没有初始化，h 和 t 都为 null 2. 队列里有节点在排队","1524":"(s \u003d h.next) \u003d\u003d null 为 true，出现这种情况为有节点加入队列，执行 enq() 时，还没有执行到 tail \u003d head，此时 head \u003d new Node();，tail 为 null","757":"移除 pred 向后的指向","886":"添加到等待队列","762":"将 node 的状态设置为 Cancel","765":"如果 node 为尾节点，那么就会 CAS 将 node 前一个节点替换为尾节点"}}